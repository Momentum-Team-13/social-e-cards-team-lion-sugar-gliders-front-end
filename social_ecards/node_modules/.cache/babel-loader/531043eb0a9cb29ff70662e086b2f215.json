{"ast":null,"code":"var _jsxFileName = \"/Users/lisaismyname0/Momentum/Homework/social-e-cards-team-lion-sugar-gliders-front-end/social_ecards/src/components/Forms.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useRef } from \"react\"; // a controlled form input -- form values are in state\n// we use this if the data being put into the form is something we want to use in UI, we want it in state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InputField = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n\n  const handleChange = event => {\n    console.log(event.target.value);\n    setName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Hi hello \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}; // uncontrolled form input -- we use a hook called useRef()\n\n_s(InputField, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = InputField;\nexport const RefInput = () => {\n  _s2();\n\n  const input = useRef();\n\n  const logValue = () => {\n    console.log(`input contains: ${input.current.value}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" ref input \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logValue,\n      children: \" log the value!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(RefInput, \"nlIcl0voJvDyuV7TOciSdgd9B4g=\");\n\n_c2 = RefInput;\nexport const LoginForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\\"Hello I am a login form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_c3 = LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"InputField\");\n$RefreshReg$(_c2, \"RefInput\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"names":["useState","useRef","InputField","name","setName","handleChange","event","console","log","target","value","RefInput","input","logValue","current","LoginForm"],"sources":["/Users/lisaismyname0/Momentum/Homework/social-e-cards-team-lion-sugar-gliders-front-end/social_ecards/src/components/Forms.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useRef } from \"react\";\n\n// a controlled form input -- form values are in state\n// we use this if the data being put into the form is something we want to use in UI, we want it in state\nexport const InputField = () => {\n  const [name, setName] = useState(\"\");\n\n  const handleChange = (event) => {\n    console.log(event.target.value);\n    setName(event.target.value);\n  };\n  return (\n    <>\n      <label>name</label>\n      <input type=\"text\" onChange={handleChange} />\n      <>\n        <p> Hi hello {name}</p>\n      </>\n    </>\n  );\n};\n\n// uncontrolled form input -- we use a hook called useRef()\n\nexport const RefInput = () => {\n  const input = useRef();\n  const logValue = () => {\n    console.log(`input contains: ${input.current.value}`);\n  };\n  return (\n    <>\n      <h2> ref input </h2>\n      <input type=\"text\" ref={input} />\n      <button onClick={logValue}> log the value!</button>\n    </>\n  );\n};\n\nexport const LoginForm = () => {\n  return <p>\"Hello I am a login form</p>;\n};\n"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB,C,CAEA;AACA;;;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMK,YAAY,GAAIC,KAAD,IAAW;IAC9BC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;IACAN,OAAO,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;EACD,CAHD;;EAIA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAEL;IAA7B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,uBACE;QAAA,yBAAcF,IAAd;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBAHF;EAAA,gBADF;AASD,CAhBM,C,CAkBP;;GAlBaD,U;;KAAAA,U;AAoBb,OAAO,MAAMS,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAMC,KAAK,GAAGX,MAAM,EAApB;;EACA,MAAMY,QAAQ,GAAG,MAAM;IACrBN,OAAO,CAACC,GAAR,CAAa,mBAAkBI,KAAK,CAACE,OAAN,CAAcJ,KAAM,EAAnD;EACD,CAFD;;EAGA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,GAAG,EAAEE;IAAxB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEC,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD,CAZM;;IAAMF,Q;;MAAAA,Q;AAcb,OAAO,MAAMI,SAAS,GAAG,MAAM;EAC7B,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAFM;MAAMA,S"},"metadata":{},"sourceType":"module"}